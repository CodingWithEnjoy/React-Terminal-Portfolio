{"version":3,"file":"static/js/736.e9596df8.chunk.js","mappings":"kLAIMA,EAAUC,EAAAA,GAAAA,IAAU,sFAMpBC,EAAOD,EAAAA,GAAAA,QAAc,kZAwBrBE,EAA0BF,EAAAA,GAAAA,IAAU,4IAUpCG,EAAUH,EAAAA,GAAAA,IAAU,+DAKpBI,EAAkBJ,EAAAA,GAAAA,IAAU,6FAM5BK,EAAcL,EAAAA,GAAAA,IAAU,mbA2BxBM,EAAYN,EAAAA,GAAAA,IAAU,6DAKtBO,EAAaP,EAAAA,GAAAA,IAAU,uGAQvBQ,EAAqBR,EAAAA,GAAAA,IAAU,qFAK/BS,EAAS,WAAO,IAAD,YACbC,GAAWC,EAAAA,EAAAA,UAAS,UAAU,kBAClCC,MAAM,gDAAgDC,MAAK,SAACC,GAAG,OAC7DA,EAAIC,MAAM,GACX,IAGGC,GAAWL,EAAAA,EAAAA,UAAS,cAAc,kBACtCC,MACE,yEACAC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,GAAC,IAGvBE,EAAmBP,EAASQ,WAAaF,EAASE,UAExDC,QAAQC,IAAIH,GAkBZ,OACE,SAAClB,EAAO,CAAC,cAAY,SAAQ,UAC3B,SAACE,EAAI,UACFgB,GACC,iCACE,SAACf,EAAuB,WACtB,SAACE,EAAe,OAElB,UAACC,EAAW,YACV,6BACE,SAACC,EAAS,oBAAkB,KAAC,SAACE,EAAkB,QAElD,6BACE,SAACF,EAAS,mBAAiB,KAAC,SAACE,EAAkB,QAEjD,6BACE,SAACF,EAAS,wBAAsB,KAAC,SAACE,EAAkB,QAEtD,6BACE,SAACF,EAAS,yBAAuB,KAAC,SAACE,EAAkB,QAEvD,6BACE,SAACF,EAAS,2BAAyB,KAAC,SAACE,EAAkB,cAK7D,iCACE,SAACN,EAAuB,WACtB,SAACC,EAAO,CAACkB,IAAkB,QAAf,EAAEX,EAASY,YAAI,aAAb,EAAeC,gBAE/B,UAAClB,EAAW,YACV,6BACE,SAACC,EAAS,oBAAmB,KAC7B,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeE,OAAmB,QAEjD,6BACE,SAAClB,EAAS,mBAAkB,KAC5B,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeG,UAE9B,6BACE,SAACnB,EAAS,wBAAuB,KACjC,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeI,gBAE9B,6BACE,SAACpB,EAAS,yBAAwB,KAClC,SAACC,EAAU,UAAe,QAAf,EAAEG,EAASY,YAAI,aAAb,EAAeK,gBAE9B,6BACE,SAACrB,EAAS,2BAA0B,KACpC,SAACC,EAAU,UAlEJ,SAACqB,GACpB,IAAMC,EAAW,IAAIC,KAAKF,GAEpBG,EAAMF,EAASG,UACfC,EAAQJ,EAASK,WAAa,EAC9BC,EAAON,EAASO,cAChBC,EAAQR,EAASS,WACjBC,EAAUV,EAASW,aAEzB,MAAM,GAAN,OAAUT,EAAIU,WAAWC,SAAS,EAAG,KAAI,YAAIT,EAC1CQ,WACAC,SAAS,EAAG,KAAI,YAAIP,EAAKM,WAAWC,SAAS,EAAG,KAAI,YAAIL,EACxDI,WACAC,SAAS,EAAG,KAAI,YAAIH,EAAQE,WAAWC,SAAS,EAAG,KACxD,CAqDiBC,CAA0B,QAAd,EAAC3B,EAASM,YAAI,aAAb,EAAesB,yBAS/C,EAEA,UAAeC,EAAAA,KAAWpC,E","sources":["components/commands/GitHub.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Card = styled.section`\r\n  display: flex;\r\n  width: 60%;\r\n  border-radius: 12px;\r\n  box-sizing: border-box;\r\n  background-color: #22272e;\r\n  padding: 10px;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  @media (max-width: 950px) {\r\n    width: 90%;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    padding: 2px;\r\n    width: 100%;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nconst ProfilePictureContainer = styled.div`\r\n  display: flex;\r\n  width: 30%;\r\n  padding: 10px;\r\n\r\n  @media (max-width: 1200px) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Picture = styled.img`\r\n  width: 100%;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst PictureSkeleton = styled.div`\r\n  width: 100%;\r\n  border-radius: 50%;\r\n  background-color: #22272e;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  line-height: 1.8em;\r\n  margin-left: 10px;\r\n  justify-content: center;\r\n\r\n  span {\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    @media (max-width: 1200px) {\r\n      align-items: center;\r\n    }\r\n  }\r\n  @media (max-width: 750px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    width: 100%;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nconst FieldName = styled.div`\r\n  width: 25%;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FieldValue = styled.div`\r\n  width: 75%;\r\n\r\n  @media (max-width: 1200px) {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst FieldValueSkeleton = styled.div`\r\n  width: 75%;\r\n  height: 90%;\r\n  background-color: #22272e;\r\n`;\r\nconst GitHub = () => {\r\n  const userData = useQuery(\"ghData\", () =>\r\n    fetch(\"https://api.github.com/users/CodingWithEnjoy\").then((res) =>\r\n      res.json()\r\n    )\r\n  );\r\n\r\n  const repoData = useQuery(\"ghRepoData\", () =>\r\n    fetch(\r\n      \"https://api.github.com/repos/CodingWithEnjoy/React-Terminal-Portfolio\"\r\n    ).then((res) => res.json())\r\n  );\r\n\r\n  const dataStillLoading = userData.isLoading || repoData.isLoading;\r\n\r\n  console.log(dataStillLoading);\r\n\r\n  const formatedDate = (date: string): string => {\r\n    const formated = new Date(date);\r\n\r\n    const day = formated.getDate();\r\n    const month = formated.getMonth() + 1;\r\n    const year = formated.getFullYear();\r\n    const hours = formated.getHours();\r\n    const minutes = formated.getMinutes();\r\n\r\n    return `${day.toString().padStart(2, \"0\")}/${month\r\n      .toString()\r\n      .padStart(2, \"0\")}/${year.toString().padStart(2, \"0\")} ${hours\r\n      .toString()\r\n      .padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <Wrapper data-testid=\"github\">\r\n      <Card>\r\n        {dataStillLoading ? (\r\n          <>\r\n            <ProfilePictureContainer>\r\n              <PictureSkeleton />\r\n            </ProfilePictureContainer>\r\n            <CardContent>\r\n              <span>\r\n                <FieldName>Name:</FieldName> <FieldValueSkeleton />\r\n              </span>\r\n              <span>\r\n                <FieldName>Bio:</FieldName> <FieldValueSkeleton />\r\n              </span>\r\n              <span>\r\n                <FieldName>Folowers:</FieldName> <FieldValueSkeleton />\r\n              </span>\r\n              <span>\r\n                <FieldName>Following:</FieldName> <FieldValueSkeleton />\r\n              </span>\r\n              <span>\r\n                <FieldName>Last update:</FieldName> <FieldValueSkeleton />\r\n              </span>\r\n            </CardContent>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <ProfilePictureContainer>\r\n              <Picture src={userData.data?.avatar_url} />\r\n            </ProfilePictureContainer>\r\n            <CardContent>\r\n              <span>\r\n                <FieldName>Name:</FieldName>{\" \"}\r\n                <FieldValue>{userData.data?.name}</FieldValue>{\" \"}\r\n              </span>\r\n              <span>\r\n                <FieldName>Bio:</FieldName>{\" \"}\r\n                <FieldValue>{userData.data?.bio}</FieldValue>\r\n              </span>\r\n              <span>\r\n                <FieldName>Folowers:</FieldName>{\" \"}\r\n                <FieldValue>{userData.data?.followers}</FieldValue>\r\n              </span>\r\n              <span>\r\n                <FieldName>Following:</FieldName>{\" \"}\r\n                <FieldValue>{userData.data?.following}</FieldValue>\r\n              </span>\r\n              <span>\r\n                <FieldName>Last update:</FieldName>{\" \"}\r\n                <FieldValue>\r\n                  {formatedDate(repoData.data?.pushed_at)}\r\n                </FieldValue>\r\n              </span>\r\n            </CardContent>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(GitHub);\r\n"],"names":["Wrapper","styled","Card","ProfilePictureContainer","Picture","PictureSkeleton","CardContent","FieldName","FieldValue","FieldValueSkeleton","GitHub","userData","useQuery","fetch","then","res","json","repoData","dataStillLoading","isLoading","console","log","src","data","avatar_url","name","bio","followers","following","date","formated","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","toString","padStart","formatedDate","pushed_at","React"],"sourceRoot":""}