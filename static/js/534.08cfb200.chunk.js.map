{"version":3,"file":"static/js/534.08cfb200.chunk.js","mappings":"8LASMA,EAAiBC,EAAAA,GAAAA,IAAU,iMAY3BC,EAAmBD,EAAAA,GAAAA,IAAU,0DAK7BE,GAASC,EAAAA,EAAAA,IAAS,6GASlBC,EAAUJ,EAAAA,GAAAA,KAAW,kFAEZE,GAGTG,EAAU,SAAH,GAA2B,IAArBC,EAAM,EAANA,OACjB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,SAAS,EACTC,OAAO,IACP,eAHKC,EAAQ,KAAEC,EAAW,KAKtBC,GAAUC,EAAAA,EAAAA,cAAY,WAC1B,MAA8B,gBAApB,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQQ,eACH,8DAIN,QAFgB,EAAGC,EAAAA,YAAAA,MAClB,SAACC,GAAI,OAAKA,EAAKC,KAAKH,iBAAwB,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQQ,cAAa,WAC5D,aAFmB,EAEjBI,IAHG,IAAD,CAOT,GAAG,CAACZ,IAEEa,GAAWN,EAAAA,EAAAA,cAAY,WAC3B,IAAMO,EAAcR,IAEpB,GAAIQ,EAAa,CACfT,EAAY,CAAEH,SAAS,EAAMC,OAAO,IAEpC,IAAMY,EAAKC,YAAW,kBAAMC,OAAOC,KAAKJ,EAAY,GAAE,MAEtD,OAAO,kBAAMK,aAAaJ,EAAI,CAChC,CACEV,EAAY,CAAEH,SAAS,EAAOC,OAAO,GAEzC,GAAG,CAACG,IAMJ,OAJAc,EAAAA,EAAAA,YAAU,WACRP,GACF,GAAG,CAACA,KAGF,gCACGT,EAASD,QACR,UAACV,EAAc,YACb,iBAAM4B,UAAU,QAAO,gEAGvB,yFAEE,SAAC,IAAO,sBAAkB,2BAE5B,qCACO,SAAC,IAAO,oCAEf,+EAEE,SAAC,IAAO,qBAAkB,QAE5B,+EAEE,SAAC,IAAO,yBAIbjB,EAASF,UACR,UAACP,EAAgB,YACf,6CAAqBK,MACrB,SAACF,EAAO,qBAKlB,EAEA,UAAewB,EAAAA,KAAWvB,E,8HC1GpBwB,EAAO7B,EAAAA,GAAAA,GAAS,gOAehB8B,EAAO9B,EAAAA,GAAAA,GAAS,+RAqBhB+B,EAAO/B,EAAAA,GAAAA,IAAU,8IAUVe,EAAc,CACzB,CACEE,KAAM,SACNC,IAAK,qCACLc,KAAM,+DAER,CACEf,KAAM,UACNC,IAAK,uCAEP,CACED,KAAM,YACNC,IAAK,2CA+BT,UA3Be,WACb,OACE,iCACE,SAACW,EAAI,UACFd,EAAYkB,KAAI,SAACjB,EAAMkB,GAAK,OAC3B,UAACJ,EAAI,YACH,kBAAMH,UAAU,OAAM,UAAEX,EAAKC,KAAI,QACjC,cAAGU,UAAU,MAAMQ,KAAMnB,EAAKE,IAAI,SAC/BF,EAAKE,QAHCgB,EAKJ,OAIX,UAACH,EAAI,YACH,2FAEE,SAAC,IAAO,sBAAkB,gBAE5B,0CACe,SAAC,IAAO,gCAA4B,wBAK3D,C","sources":["components/commands/Connect.tsx","components/commands/Social.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Command } from \"../../styles/common\";\r\nimport { socialMedia } from \"./Social\";\r\n\r\ninterface Props {\r\n  social: string;\r\n}\r\n\r\nconst ErrorContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 1.8em;\r\n  .error {\r\n    color: #ff8b8b;\r\n    font-weight: bold;\r\n    line-height: 2em;\r\n  }\r\n`;\r\n\r\nconst LoadingContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from{\r\n    transform: rotate(0deg)\r\n  }\r\n  to{\r\n    transform:rotate(360deg)\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.span`\r\n  margin-left: 1em;\r\n  animation: ${rotate} 2s linear infinite;\r\n`;\r\n\r\nconst Connect = ({ social }: Props) => {\r\n  const [feedBack, setFeedBack] = useState({\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  const findUrl = useCallback(() => {\r\n    if (social?.toLowerCase() === \"repository\") {\r\n      return \"https://github.com/CodingWithEnjoy/React-Terminal-Portfolio\";\r\n    } else {\r\n      const redirectUrl = socialMedia.find(\r\n        (item) => item.site.toLowerCase() === social?.toLowerCase()\r\n      )?.url;\r\n\r\n      return redirectUrl;\r\n    }\r\n  }, [social]);\r\n\r\n  const redirect = useCallback(() => {\r\n    const redirectUrl = findUrl();\r\n\r\n    if (redirectUrl) {\r\n      setFeedBack({ loading: true, error: false });\r\n\r\n      const id = setTimeout(() => window.open(redirectUrl), 1500);\r\n\r\n      return () => clearTimeout(id);\r\n    } else {\r\n      setFeedBack({ loading: false, error: true });\r\n    }\r\n  }, [findUrl]);\r\n\r\n  useEffect(() => {\r\n    redirect();\r\n  }, [redirect]);\r\n\r\n  return (\r\n    <>\r\n      {feedBack.error && (\r\n        <ErrorContainer>\r\n          <span className=\"error\">\r\n            Error while connecting to the given social media!\r\n          </span>\r\n          <span>\r\n            Remember to pass a valid social media as parameter to the\r\n            <Command>connect</Command> command, like this:\r\n          </span>\r\n          <span>\r\n            E.g: <Command>Connect Instagram</Command>\r\n          </span>\r\n          <span>\r\n            To see the list of available social media, type\r\n            <Command>social</Command>,\r\n          </span>\r\n          <span>\r\n            To see the list of all available commands, type\r\n            <Command>help</Command>\r\n          </span>\r\n        </ErrorContainer>\r\n      )}\r\n      {feedBack.loading && (\r\n        <LoadingContainer>\r\n          <span>Connecting to {social}</span>\r\n          <Spinner>+</Spinner>\r\n        </LoadingContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Connect);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Command } from \"../../styles/common\";\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  width: 100%;\r\n  line-height: 1.8em;\r\n  padding-left: 0;\r\n\r\n  @media (max-width: 780px) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  width: 70%;\r\n\r\n  @media (max-width: 780px) {\r\n    width: 100%;\r\n  }\r\n\r\n  .site {\r\n    width: 30%;\r\n  }\r\n\r\n  .url {\r\n    width: 70%;\r\n    color: #50fa7b;\r\n    font-weight: bold;\r\n    overflow-wrap: break-word;\r\n    word-wrap: break-word;\r\n  }\r\n`;\r\n\r\nconst Hint = styled.div`\r\n  @media (max-width: 780px) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nexport const socialMedia = [\r\n  {\r\n    site: \"GitHub\",\r\n    url: \"https://github.com/CodingWithEnjoy\",\r\n    repo: \"https://github.com/CodingWithEnjoy/React-Terminal-Portfolio\",\r\n  },\r\n  {\r\n    site: \"Twitter\",\r\n    url: \"https://twitter.com/codingwithenjoy\",\r\n  },\r\n  {\r\n    site: \"Instagram\",\r\n    url: \"https://instagram.com/codingwithenjoy/\",\r\n  },\r\n];\r\n\r\nconst Social = () => {\r\n  return (\r\n    <>\r\n      <List>\r\n        {socialMedia.map((item, index) => (\r\n          <Item key={index}>\r\n            <span className=\"site\">{item.site}:</span>\r\n            <a className=\"url\" href={item.url}>\r\n              {item.url}\r\n            </a>\r\n          </Item>\r\n        ))}\r\n      </List>\r\n\r\n      <Hint>\r\n        <p>\r\n          A shortcut to open any of the social media listed above is the\r\n          <Command>connect</Command> command.\r\n        </p>\r\n        <p>\r\n          For example: <Command>connect instagram</Command>. Try it out!\r\n        </p>\r\n      </Hint>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Social;\r\n"],"names":["ErrorContainer","styled","LoadingContainer","rotate","keyframes","Spinner","Connect","social","useState","loading","error","feedBack","setFeedBack","findUrl","useCallback","toLowerCase","socialMedia","item","site","url","redirect","redirectUrl","id","setTimeout","window","open","clearTimeout","useEffect","className","React","List","Item","Hint","repo","map","index","href"],"sourceRoot":""}